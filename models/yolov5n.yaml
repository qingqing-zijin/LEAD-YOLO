# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# 类别数 BDD100K
nc: 12  # number of classes
# 模型的缩放系数
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.25  # layer channel multiple

# Anchor先验coco
anchors:
  - [10,13, 16,30, 33,23]       # P3/8倍下采样(小目标)
  - [30,61, 62,45, 59,119]      # P4/16倍下采样(中目标)
  - [116,90, 156,198, 373,326]  # P5/32倍下采样(大目标)

# YOLOv5 Backbone的配置
backbone:
  #[源, 数量,  模块,  参数]
  [[-1,  1,   Conv,  [64, 6, 2, 2]],  # 0-P1/2倍下采样
   [-1,  1,   Conv,  [128, 3, 2]],    # 1-P2/4倍下采样
   [-1,  3,   C3,    [128]],          # 2
   [-1,  1,   Conv,  [256, 3, 2]],    # 3-P3/8倍下采样
   [-1,  6,   C3,    [256]],          # 4
   [-1,  1,   Conv,  [512, 3, 2]],    # 5-P4/16倍下采样
   [-1,  9,   C3,    [512]],          # 6
   [-1,  1,   Conv,  [1024, 3, 2]],   # 7-P5/32倍下采样
   [-1,  3,   C3,    [1024]],         # 8
   [-1,  1,   SPPF,  [1024, 5]],      # 9
  ]

# YOLOv5的Neck+Head配置
head:
  [[-1, 1, Conv, [512, 1, 1]], # 10
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # 11 对特征进行上采用
   [[-1, 6], 1, Concat, [1]],  # 12 将16x下采样的P4特征（第6层）与前一层的特征进行拼接
   [-1, 3, C3, [512, False]],  # 13 对拼接后的特征进行Fusion

   [-1, 1, Conv, [256, 1, 1]], # 14
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # 15 对特征进行上采用
   [[-1, 4], 1, Concat, [1]],  # 16 将8x下采样的P3特征（第4层）与前一层的特征进行拼接
   [-1, 3, C3, [256, False]],  # 17 对拼接后的特征进行Fusion (P3/8-小目标)

   [-1, 1, Conv, [256, 3, 2]], # 18
   [[-1, 14], 1, Concat, [1]], # 19 将16x下采样的融合P4特征（第14层）与前一层的特征进行拼接
   [-1, 3, C3, [512, False]],  # 20 对拼接后的特征进行Fusion (P4/16-中目标)

   [-1, 1, Conv, [512, 3, 2]],  # 21
   [[-1, 10], 1, Concat, [1]],  # 22 将32x下采样的融合P5特征（第10层）与前一层的特征进行拼接
   [-1, 3, C3, [1024, False]],  # 23 对拼接后的特征进行Fusion (P5/32-大目标)

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # 使用P3/P4/P5特征进行预测
  ]
